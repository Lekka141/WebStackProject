{"version":3,"file":"static/js/791.ba81f65e.chunk.js","mappings":"iQAqGA,QA5FA,WACE,MAAOA,EAAOC,IAAYC,EAAAA,EAAAA,UAAS,KAC5BC,EAAUC,IAAeF,EAAAA,EAAAA,UAAS,KAClCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,KAC7B,MAAEK,IAAUC,EAAAA,EAAAA,YAAWC,EAAAA,GACvBC,GAAUC,EAAAA,EAAAA,MA2BhB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,EAAS,CAACC,UAAU,OAAOC,SAAS,KAAIC,UACvCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CACFC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UACZP,SAAA,EAEFJ,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAACV,UAAU,KAAKW,QAAQ,KAAIT,SAAC,aAGxCC,EAAAA,EAAAA,MAACC,EAAAA,EAAG,CAACJ,UAAU,OAAOY,SAlCPC,UACnBC,EAAEC,iBAEF,IAEE,MAAMC,QAAiBC,EAAAA,EAAIC,KAAK,SAAU,CAAEhC,QAAOG,aAE/C2B,EAASG,KAAKC,SAEhB3B,EAAM,CAAE4B,GAAIL,EAASG,KAAKG,KAAKD,GAAInC,MAAO8B,EAASG,KAAKG,KAAKpC,QAC7DU,EAAQ2B,KAAK,eAGb/B,EAASwB,EAASG,KAAKK,QAE3B,CAAE,MAAOC,GAAM,IAADC,EAAAC,EAEZnC,GAAqB,QAAZkC,EAAAD,EAAIT,gBAAQ,IAAAU,GAAM,QAANC,EAAZD,EAAcP,YAAI,IAAAQ,OAAN,EAAZA,EAAoBH,UAAW,uCAC1C,GAgBkDnB,GAAI,CAAEuB,GAAI,GAAI1B,SAAA,EAC1DJ,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRlB,QAAQ,WACRmB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTX,GAAG,QACHY,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAOnD,EACPoD,SAAWxB,GAAM3B,EAAS2B,EAAEyB,OAAOF,UAErCvC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAS,CACRlB,QAAQ,WACRmB,OAAO,SACPC,UAAQ,EACRC,WAAS,EACTE,KAAK,WACLD,MAAM,WACNO,KAAK,WACLnB,GAAG,WACHc,aAAa,mBACbE,MAAOhD,EACPiD,SAAWxB,GAAMxB,EAAYwB,EAAEyB,OAAOF,SAEvC9C,IACCO,EAAAA,EAAAA,KAACY,EAAAA,EAAU,CAAC+B,MAAM,QAAQ9B,QAAQ,QAAOT,SACtCX,KAGLO,EAAAA,EAAAA,KAAC4C,EAAAA,EAAM,CACLF,KAAK,SACLR,WAAS,EACTrB,QAAQ,YACR8B,MAAM,UACNpC,GAAI,CAAEuB,GAAI,EAAGe,GAAI,GAAIzC,SACtB,mBAOX,C,kCCjGA,MAAMe,E,QAAM2B,EAAMC,OAAO,CACvBC,QAAS,gCAKX,G","sources":["components/auth/SignIn.js","utils/API.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport { TextField, Button, Box, Typography, Container } from '@mui/material';\nimport { AuthContext } from './AuthContext';\nimport API from '../../utils/API'; /* Assuming an API utility for backend interaction */\nimport { useNavigate } from 'react-router-dom';\n\n/**\n * SignIn component handles user login functionality\n */\nfunction SignIn() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const { login } = useContext(AuthContext); /* Use the login function from AuthContext */\n  const history = useNavigate();\n\n  /**\n   * Handles the login submission and validation\n   * Calls the backend API to authenticate the user\n   */\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    try {\n      /* Call the backend API for login */\n      const response = await API.post('/login', { email, password });\n\n      if (response.data.success) {\n        /* Set authentication state and navigate to the dashboard */\n        login({ id: response.data.user.id, email: response.data.user.email }); /* Use the login method */\n        history.push('/dashboard'); /* Navigate to the dashboard */\n      } else {\n        /* Display error message */\n        setError(response.data.message);\n      }\n    } catch (err) {\n      /* Handle network or unexpected errors */\n      setError(err.response?.data?.message || 'An error occurred. Please try again.');\n    }\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign In\n        </Typography>\n        <Box component=\"form\" onSubmit={handleSubmit} sx={{ mt: 1 }}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            value={email}\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            value={password}\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          {error && (\n            <Typography color=\"error\" variant=\"body2\">\n              {error}\n            </Typography>\n          )}\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n        </Box>\n      </Box>\n    </Container>\n  );\n}\n\nexport default SignIn;\n","import axios from 'axios';\r\n\r\nconst API = axios.create({\r\n  baseURL: 'https://api.yourbackend.com', /* Replace with your backend URL */\r\n});\r\n\r\nexport const login = (email, password) => API.post('/login', { email, password });\r\n\r\nexport default API;\r\n"],"names":["email","setEmail","useState","password","setPassword","error","setError","login","useContext","AuthContext","history","useNavigate","_jsx","Container","component","maxWidth","children","_jsxs","Box","sx","marginTop","display","flexDirection","alignItems","Typography","variant","onSubmit","async","e","preventDefault","response","API","post","data","success","id","user","push","message","err","_err$response","_err$response$data","mt","TextField","margin","required","fullWidth","label","name","autoComplete","autoFocus","value","onChange","target","type","color","Button","mb","axios","create","baseURL"],"sourceRoot":""}