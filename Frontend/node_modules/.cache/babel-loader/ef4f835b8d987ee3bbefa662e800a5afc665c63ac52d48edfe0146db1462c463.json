{"ast":null,"code":"var _jsxFileName = \"/VaultConnect/Frontend/src/components/auth/AuthContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); /* To store additional user information */\n\n  /* Check localStorage for authentication status on component mount */\n  useEffect(() => {\n    const storedAuthStatus = localStorage.getItem('isAuthenticated');\n    const storedUser = localStorage.getItem('user');\n    if (storedAuthStatus === 'true') {\n      setIsAuthenticated(true);\n      setUser(JSON.parse(storedUser)); /* Parse stored user data if available */\n    }\n  }, []);\n\n  /* Function to handle login */\n  const login = userData => {\n    setIsAuthenticated(true);\n    setUser(userData);\n    localStorage.setItem('isAuthenticated', 'true'); /* Persist auth status */\n    localStorage.setItem('user', JSON.stringify(userData)); /* Persist user data */\n  };\n\n  /* Function to handle logout */\n  const logout = () => {\n    setIsAuthenticated(false);\n    setUser(null);\n    localStorage.removeItem('isAuthenticated');\n    localStorage.removeItem('user');\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      login,\n      logout\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","storedAuthStatus","localStorage","getItem","storedUser","JSON","parse","login","userData","setItem","stringify","logout","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/VaultConnect/Frontend/src/components/auth/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [user, setUser] = useState(null); /* To store additional user information */\r\n\r\n  /* Check localStorage for authentication status on component mount */\r\n  useEffect(() => {\r\n    const storedAuthStatus = localStorage.getItem('isAuthenticated');\r\n    const storedUser = localStorage.getItem('user');\r\n\r\n    if (storedAuthStatus === 'true') {\r\n      setIsAuthenticated(true);\r\n      setUser(JSON.parse(storedUser)); /* Parse stored user data if available */\r\n    }\r\n  }, []);\r\n\r\n  /* Function to handle login */\r\n  const login = (userData) => {\r\n    setIsAuthenticated(true);\r\n    setUser(userData);\r\n    localStorage.setItem('isAuthenticated', 'true'); /* Persist auth status */\r\n    localStorage.setItem('user', JSON.stringify(userData)); /* Persist user data */\r\n  };\r\n\r\n  /* Function to handle logout */\r\n  const logout = () => {\r\n    setIsAuthenticated(false);\r\n    setUser(null);\r\n    localStorage.removeItem('isAuthenticated');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ isAuthenticated, user, login, logout }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAC,CAAC;AAE1C,OAAO,MAAMM,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAExC;EACAC,SAAS,CAAC,MAAM;IACd,MAAMW,gBAAgB,GAAGC,YAAY,CAACC,OAAO,CAAC,iBAAiB,CAAC;IAChE,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,gBAAgB,KAAK,MAAM,EAAE;MAC/BH,kBAAkB,CAAC,IAAI,CAAC;MACxBE,OAAO,CAACK,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC,CAAC,CAAC;IACnC;EACF,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMG,KAAK,GAAIC,QAAQ,IAAK;IAC1BV,kBAAkB,CAAC,IAAI,CAAC;IACxBE,OAAO,CAACQ,QAAQ,CAAC;IACjBN,YAAY,CAACO,OAAO,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC,CAAC;IACjDP,YAAY,CAACO,OAAO,CAAC,MAAM,EAAEJ,IAAI,CAACK,SAAS,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1D,CAAC;;EAED;EACA,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBb,kBAAkB,CAAC,KAAK,CAAC;IACzBE,OAAO,CAAC,IAAI,CAAC;IACbE,YAAY,CAACU,UAAU,CAAC,iBAAiB,CAAC;IAC1CV,YAAY,CAACU,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,oBACEpB,OAAA,CAACC,WAAW,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,eAAe;MAAEE,IAAI;MAAEQ,KAAK;MAAEI;IAAO,CAAE;IAAAhB,QAAA,EACnEA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACtB,EAAA,CApCWF,YAAY;AAAAyB,EAAA,GAAZzB,YAAY;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}